#!/usr/bin/env ruby
# IO defined, built in
require 'rubygems'
gem 'gtk2applib', '~> 15.3'
require 'gtk2applib' # Gtk2AppLib defined
# Gtk2AlertApp defined when gtk2alertapp/appconfig loads
# Configuration defined

# Miscellaneous info on this application/file
Gtk2AppLib::Lock.lock_mode
program = Gtk2AppLib::Program.new( {
	'name'		=> 'Ruby-Gnome Alerts',
	'authors'	=> ['carlosjhr64@gmail.com'],
	'website'	=> 'https://sites.google.com/site/gtk2applib/home/gtk2applib-applications/gtk2alertapp',
	'website_label'	=> 'Ruby-Gnome Alerts',
	'license'	=> 'GPL',
	'copyright'	=> '2012-06-04',
	} )

# Open a pipe to the alerts daemon
  pipe = IO.popen('gtk2alertdaemon','w+')
  pipe.puts "l #{Gtk2AlertApp::Configuration::ALERTS_DATA_FILE}"
  pipe.flush

  begin
    require 'gtk2alertapp/alertparser.rb'
    require 'gtk2alertapp.rb'

    program.window do |window|
      # Ask daemon for a listing of current alerts
      alerts = Gtk2AlertApp::Alerts.new
      pipe.puts 'l'
      pipe.flush
      while (line = pipe.gets.strip).length > 0 do
        begin
          alerts.add(line)
        rescue Exception
          $!.puts_bang!(line) # since the daemon uses the same parser, this should not happen
        end
      end

      # Build the alerts editor
      vbox = Gtk2AppLib::Widgets::VBox.new( Gtk2AppLib::Widgets::ScrolledWindow.new(window) )

      hbox = Gtk2AppLib::Widgets::HBox.new(vbox)
      Gtk2AlertApp::DigitalClock.new("%A, %B %d %Y, %I:%M:%S %p",hbox)
      alert_editor = Gtk2AlertApp::AlertEditor.new(pipe, vbox, alerts)

      # Show the alerts listings
      entry_rows = Gtk2AlertApp::EntryRows.new(pipe,alert_editor,alerts,vbox)
      alerts.keys.sort{|a,b| a.upcase<=>b.upcase}.each{|name|
        entry_rows.add(name)
      }
      # Give alert_editor a hook to entry_rows,
      # allows alert_editor to populate entry_rows
      alert_editor.entry_rows = entry_rows

      window.show_all
      alert_editor.hide_init
    end
  rescue Exception
    $!.puts_bang!
  ensure
    program.finalize
    pipe.close
  end
